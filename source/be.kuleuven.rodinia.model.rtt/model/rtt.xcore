package be.kueleuven.rodinia.model.rtt

import be.kuleuven.rodinia.dsl.datatypes.datatypes.DataType

class OrocosPackage {
	String name
	contains TaskContext[] taskContexts
	contains ConnectionPolicy [] connectionPolicies
	contains PeerGroup[] peerGroups
}

class TaskContext {
	String [1] name
	String [1] namespace
	String [1] ^type = ""
	contains Activity activity
	contains AbstractInputPort[] inputPorts
	contains OutputPort [] outputPorts
	contains Property[] properties
	contains Operation[] operations
}

class PeerGroup {
	String name
	refers TaskContext [1] coordinator
	refers TaskContext [*] members
}

class ConnectionPolicy
{
	String name
	refers AbstractInputPort [1] inputPort
	refers OutputPort [1] outputPort
	short bufferSize
	short dataSize
	boolean init
	ConnectionPolicyLockPolicy lockPolicy = "LOCK_FREE"
	boolean pull
	ConnectionPolicyTransport transport
	ConnectionPolicyType ^type = "DATA"
}

enum ConnectionPolicyType
{
	DATA
	BUFFER = 1
	CIRCULAR_BUFFER = 2
}

enum ConnectionPolicyLockPolicy
{
	UNSYNC
	LOCKED = 1
	LOCK_FREE = 2
}

enum ConnectionPolicyTransport
{	
	^default
   CORBA = 1
   MQUEUE = 2
   ROS = 3
}

interface IActivity {
	String[1] name = "Activity"
	refers TaskContext taskContext
}

class Activity extends IActivity {
	contains Slave[] slave opposite master
	Scheduler scheduler = "ORO_SCHED_OTHER"
	String cpuAffinity = "~0"
	float period = "0"
	int priority = "0"
}

class Slave extends IActivity {
	container Activity master opposite slave
}

enum Scheduler {
	ORO_SCHED_OTHER
	ORO_SCHED_RT = 1
}

abstract class AbstractInputPort {
	String [1] name
	refers DataType dataType
}

class InputPort extends AbstractInputPort{
}

class EventPort extends AbstractInputPort {
}

class OutputPort
{
	String [1] name
	refers DataType dataType
}

class Property {
	String name
	String description
	refers DataType ^type
	String value
}

class Operation {
	String name
	refers DataType returnType
	contains OperationArgument[] arguments
	ExecutionType executionType = "ClientThread"
	String documentation
}

class OperationArgument {
	String name
	refers DataType ^type
}

enum ExecutionType {
	ClientThread
	OwnThread
}