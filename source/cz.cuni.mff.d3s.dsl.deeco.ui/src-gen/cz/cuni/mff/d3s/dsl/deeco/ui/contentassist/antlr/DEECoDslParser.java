/*
* generated by Xtext
*/
package cz.cuni.mff.d3s.dsl.deeco.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import cz.cuni.mff.d3s.dsl.deeco.services.DEECoDslGrammarAccess;

public class DEECoDslParser extends AbstractContentAssistParser {
	
	@Inject
	private DEECoDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected cz.cuni.mff.d3s.dsl.deeco.ui.contentassist.antlr.internal.InternalDEECoDslParser createParser() {
		cz.cuni.mff.d3s.dsl.deeco.ui.contentassist.antlr.internal.InternalDEECoDslParser result = new cz.cuni.mff.d3s.dsl.deeco.ui.contentassist.antlr.internal.InternalDEECoDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getSystemAccess().getGroup(), "rule__System__Group__0");
					put(grammarAccess.getSystemAccess().getGroup_4(), "rule__System__Group_4__0");
					put(grammarAccess.getSystemAccess().getGroup_4_3(), "rule__System__Group_4_3__0");
					put(grammarAccess.getSystemAccess().getGroup_5(), "rule__System__Group_5__0");
					put(grammarAccess.getSystemAccess().getGroup_5_3(), "rule__System__Group_5_3__0");
					put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
					put(grammarAccess.getComponentAccess().getGroup_5(), "rule__Component__Group_5__0");
					put(grammarAccess.getComponentAccess().getGroup_6(), "rule__Component__Group_6__0");
					put(grammarAccess.getEnsembleAccess().getGroup(), "rule__Ensemble__Group__0");
					put(grammarAccess.getEnsembleAccess().getGroup_5(), "rule__Ensemble__Group_5__0");
					put(grammarAccess.getEnsembleAccess().getGroup_5_3(), "rule__Ensemble__Group_5_3__0");
					put(grammarAccess.getProcessAccess().getGroup(), "rule__Process__Group__0");
					put(grammarAccess.getSystemAccess().getNameAssignment_2(), "rule__System__NameAssignment_2");
					put(grammarAccess.getSystemAccess().getComponentsAssignment_4_2(), "rule__System__ComponentsAssignment_4_2");
					put(grammarAccess.getSystemAccess().getComponentsAssignment_4_3_1(), "rule__System__ComponentsAssignment_4_3_1");
					put(grammarAccess.getSystemAccess().getEnsemblesAssignment_5_2(), "rule__System__EnsemblesAssignment_5_2");
					put(grammarAccess.getSystemAccess().getEnsemblesAssignment_5_3_1(), "rule__System__EnsemblesAssignment_5_3_1");
					put(grammarAccess.getComponentAccess().getNameAssignment_1(), "rule__Component__NameAssignment_1");
					put(grammarAccess.getComponentAccess().getProcessAssignment_4(), "rule__Component__ProcessAssignment_4");
					put(grammarAccess.getComponentAccess().getEnsembleMemberAssignment_5_1(), "rule__Component__EnsembleMemberAssignment_5_1");
					put(grammarAccess.getComponentAccess().getEnsembleCordinatorAssignment_6_1(), "rule__Component__EnsembleCordinatorAssignment_6_1");
					put(grammarAccess.getEnsembleAccess().getNameAssignment_1(), "rule__Ensemble__NameAssignment_1");
					put(grammarAccess.getEnsembleAccess().getCoordinatorAssignment_4(), "rule__Ensemble__CoordinatorAssignment_4");
					put(grammarAccess.getEnsembleAccess().getMembersAssignment_5_2(), "rule__Ensemble__MembersAssignment_5_2");
					put(grammarAccess.getEnsembleAccess().getMembersAssignment_5_3_1(), "rule__Ensemble__MembersAssignment_5_3_1");
					put(grammarAccess.getProcessAccess().getNameAssignment_2(), "rule__Process__NameAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			cz.cuni.mff.d3s.dsl.deeco.ui.contentassist.antlr.internal.InternalDEECoDslParser typedParser = (cz.cuni.mff.d3s.dsl.deeco.ui.contentassist.antlr.internal.InternalDEECoDslParser) parser;
			typedParser.entryRuleSystem();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DEECoDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DEECoDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
