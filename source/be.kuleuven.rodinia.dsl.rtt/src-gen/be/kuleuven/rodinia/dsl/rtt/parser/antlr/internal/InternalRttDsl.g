/*
* generated by Xtext
*/
grammar InternalRttDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package be.kuleuven.rodinia.dsl.rtt.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package be.kuleuven.rodinia.dsl.rtt.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import be.kuleuven.rodinia.dsl.rtt.services.RttDslGrammarAccess;

}

@parser::members {

 	private RttDslGrammarAccess grammarAccess;
 	
    public InternalRttDslParser(TokenStream input, RttDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "OrocosPackage";	
   	}
   	
   	@Override
   	protected RttDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleOrocosPackage
entryRuleOrocosPackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrocosPackageRule()); }
	 iv_ruleOrocosPackage=ruleOrocosPackage 
	 { $current=$iv_ruleOrocosPackage.current; } 
	 EOF 
;

// Rule OrocosPackage
ruleOrocosPackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOrocosPackageAccess().getOrocosPackageAction_0(),
            $current);
    }
)	otherlv_1='OrocosPackage' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrocosPackageAccess().getOrocosPackageKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrocosPackageAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrocosPackageRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrocosPackageAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='taskContexts' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOrocosPackageAccess().getTaskContextsKeyword_4_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOrocosPackageAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrocosPackageAccess().getTaskContextsTaskContextParserRuleCall_4_2_0()); 
	    }
		lv_taskContexts_6_0=ruleTaskContext		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrocosPackageRule());
	        }
       		add(
       			$current, 
       			"taskContexts",
        		lv_taskContexts_6_0, 
        		"TaskContext");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOrocosPackageAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrocosPackageAccess().getTaskContextsTaskContextParserRuleCall_4_3_1_0()); 
	    }
		lv_taskContexts_8_0=ruleTaskContext		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrocosPackageRule());
	        }
       		add(
       			$current, 
       			"taskContexts",
        		lv_taskContexts_8_0, 
        		"TaskContext");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOrocosPackageAccess().getRightCurlyBracketKeyword_4_4());
    }
)?(	otherlv_10='connectionPolicies' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOrocosPackageAccess().getConnectionPoliciesKeyword_5_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getOrocosPackageAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrocosPackageAccess().getConnectionPoliciesConnectionPolicyParserRuleCall_5_2_0()); 
	    }
		lv_connectionPolicies_12_0=ruleConnectionPolicy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrocosPackageRule());
	        }
       		add(
       			$current, 
       			"connectionPolicies",
        		lv_connectionPolicies_12_0, 
        		"ConnectionPolicy");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getOrocosPackageAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrocosPackageAccess().getConnectionPoliciesConnectionPolicyParserRuleCall_5_3_1_0()); 
	    }
		lv_connectionPolicies_14_0=ruleConnectionPolicy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrocosPackageRule());
	        }
       		add(
       			$current, 
       			"connectionPolicies",
        		lv_connectionPolicies_14_0, 
        		"ConnectionPolicy");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getOrocosPackageAccess().getRightCurlyBracketKeyword_5_4());
    }
)?(	otherlv_16='peerGroups' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getOrocosPackageAccess().getPeerGroupsKeyword_6_0());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getOrocosPackageAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrocosPackageAccess().getPeerGroupsPeerGroupParserRuleCall_6_2_0()); 
	    }
		lv_peerGroups_18_0=rulePeerGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrocosPackageRule());
	        }
       		add(
       			$current, 
       			"peerGroups",
        		lv_peerGroups_18_0, 
        		"PeerGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getOrocosPackageAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrocosPackageAccess().getPeerGroupsPeerGroupParserRuleCall_6_3_1_0()); 
	    }
		lv_peerGroups_20_0=rulePeerGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrocosPackageRule());
	        }
       		add(
       			$current, 
       			"peerGroups",
        		lv_peerGroups_20_0, 
        		"PeerGroup");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getOrocosPackageAccess().getRightCurlyBracketKeyword_6_4());
    }
)?	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getOrocosPackageAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleAbstractInputPort
entryRuleAbstractInputPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractInputPortRule()); }
	 iv_ruleAbstractInputPort=ruleAbstractInputPort 
	 { $current=$iv_ruleAbstractInputPort.current; } 
	 EOF 
;

// Rule AbstractInputPort
ruleAbstractInputPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractInputPortAccess().getInputPortParserRuleCall_0()); 
    }
    this_InputPort_0=ruleInputPort
    { 
        $current = $this_InputPort_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractInputPortAccess().getEventPortParserRuleCall_1()); 
    }
    this_EventPort_1=ruleEventPort
    { 
        $current = $this_EventPort_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleTaskContext
entryRuleTaskContext returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTaskContextRule()); }
	 iv_ruleTaskContext=ruleTaskContext 
	 { $current=$iv_ruleTaskContext.current; } 
	 EOF 
;

// Rule TaskContext
ruleTaskContext returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TaskContext' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTaskContextAccess().getTaskContextKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTaskContextAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='namespace' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTaskContextAccess().getNamespaceKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getNamespaceEStringParserRuleCall_4_0()); 
	    }
		lv_namespace_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		set(
       			$current, 
       			"namespace",
        		lv_namespace_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='type' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTaskContextAccess().getTypeKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getTypeEStringParserRuleCall_6_0()); 
	    }
		lv_type_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='activity' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTaskContextAccess().getActivityKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getActivityActivityParserRuleCall_7_1_0()); 
	    }
		lv_activity_8_0=ruleActivity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		set(
       			$current, 
       			"activity",
        		lv_activity_8_0, 
        		"Activity");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='inputPorts' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTaskContextAccess().getInputPortsKeyword_8_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTaskContextAccess().getLeftCurlyBracketKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getInputPortsAbstractInputPortParserRuleCall_8_2_0()); 
	    }
		lv_inputPorts_11_0=ruleAbstractInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		add(
       			$current, 
       			"inputPorts",
        		lv_inputPorts_11_0, 
        		"AbstractInputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTaskContextAccess().getCommaKeyword_8_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getInputPortsAbstractInputPortParserRuleCall_8_3_1_0()); 
	    }
		lv_inputPorts_13_0=ruleAbstractInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		add(
       			$current, 
       			"inputPorts",
        		lv_inputPorts_13_0, 
        		"AbstractInputPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTaskContextAccess().getRightCurlyBracketKeyword_8_4());
    }
)?(	otherlv_15='outputPorts' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTaskContextAccess().getOutputPortsKeyword_9_0());
    }
	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getTaskContextAccess().getLeftCurlyBracketKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getOutputPortsOutputPortParserRuleCall_9_2_0()); 
	    }
		lv_outputPorts_17_0=ruleOutputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		add(
       			$current, 
       			"outputPorts",
        		lv_outputPorts_17_0, 
        		"OutputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getTaskContextAccess().getCommaKeyword_9_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getOutputPortsOutputPortParserRuleCall_9_3_1_0()); 
	    }
		lv_outputPorts_19_0=ruleOutputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		add(
       			$current, 
       			"outputPorts",
        		lv_outputPorts_19_0, 
        		"OutputPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getTaskContextAccess().getRightCurlyBracketKeyword_9_4());
    }
)?(	otherlv_21='properties' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getTaskContextAccess().getPropertiesKeyword_10_0());
    }
	otherlv_22='{' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getTaskContextAccess().getLeftCurlyBracketKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getPropertiesPropertyParserRuleCall_10_2_0()); 
	    }
		lv_properties_23_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_23_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getTaskContextAccess().getCommaKeyword_10_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getPropertiesPropertyParserRuleCall_10_3_1_0()); 
	    }
		lv_properties_25_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_25_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getTaskContextAccess().getRightCurlyBracketKeyword_10_4());
    }
)?(	otherlv_27='operations' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getTaskContextAccess().getOperationsKeyword_11_0());
    }
	otherlv_28='{' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getTaskContextAccess().getLeftCurlyBracketKeyword_11_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getOperationsOperationParserRuleCall_11_2_0()); 
	    }
		lv_operations_29_0=ruleOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_29_0, 
        		"Operation");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_30=',' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getTaskContextAccess().getCommaKeyword_11_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskContextAccess().getOperationsOperationParserRuleCall_11_3_1_0()); 
	    }
		lv_operations_31_0=ruleOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskContextRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_31_0, 
        		"Operation");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_32='}' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getTaskContextAccess().getRightCurlyBracketKeyword_11_4());
    }
)?	otherlv_33='}' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getTaskContextAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleConnectionPolicy
entryRuleConnectionPolicy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectionPolicyRule()); }
	 iv_ruleConnectionPolicy=ruleConnectionPolicy 
	 { $current=$iv_ruleConnectionPolicy.current; } 
	 EOF 
;

// Rule ConnectionPolicy
ruleConnectionPolicy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ConnectionPolicy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConnectionPolicyAccess().getConnectionPolicyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionPolicyAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionPolicyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConnectionPolicyAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='inputPort' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConnectionPolicyAccess().getInputPortKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionPolicyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConnectionPolicyAccess().getInputPortAbstractInputPortCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='outputPort' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConnectionPolicyAccess().getOutputPortKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionPolicyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConnectionPolicyAccess().getOutputPortOutputPortCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='bufferSize' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConnectionPolicyAccess().getBufferSizeKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionPolicyAccess().getBufferSizeEShortParserRuleCall_7_1_0()); 
	    }
		lv_bufferSize_8_0=ruleEShort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionPolicyRule());
	        }
       		set(
       			$current, 
       			"bufferSize",
        		lv_bufferSize_8_0, 
        		"EShort");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='dataSize' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConnectionPolicyAccess().getDataSizeKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionPolicyAccess().getDataSizeEShortParserRuleCall_8_1_0()); 
	    }
		lv_dataSize_10_0=ruleEShort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionPolicyRule());
	        }
       		set(
       			$current, 
       			"dataSize",
        		lv_dataSize_10_0, 
        		"EShort");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='lockPolicy' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getConnectionPolicyAccess().getLockPolicyKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionPolicyAccess().getLockPolicyConnectionPolicyLockPolicyEnumRuleCall_9_1_0()); 
	    }
		lv_lockPolicy_12_0=ruleConnectionPolicyLockPolicy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionPolicyRule());
	        }
       		set(
       			$current, 
       			"lockPolicy",
        		lv_lockPolicy_12_0, 
        		"ConnectionPolicyLockPolicy");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='transport' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getConnectionPolicyAccess().getTransportKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionPolicyAccess().getTransportConnectionPolicyTransportEnumRuleCall_10_1_0()); 
	    }
		lv_transport_14_0=ruleConnectionPolicyTransport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionPolicyRule());
	        }
       		set(
       			$current, 
       			"transport",
        		lv_transport_14_0, 
        		"ConnectionPolicyTransport");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_15='type' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getConnectionPolicyAccess().getTypeKeyword_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionPolicyAccess().getTypeConnectionPolicyTypeEnumRuleCall_11_1_0()); 
	    }
		lv_type_16_0=ruleConnectionPolicyType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionPolicyRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_16_0, 
        		"ConnectionPolicyType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_init_17_0=	'init' 
    {
        newLeafNode(lv_init_17_0, grammarAccess.getConnectionPolicyAccess().getInitInitKeyword_12_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionPolicyRule());
	        }
       		setWithLastConsumed($current, "init", true, "init");
	    }

)
)?(
(
		lv_pull_18_0=	'pull' 
    {
        newLeafNode(lv_pull_18_0, grammarAccess.getConnectionPolicyAccess().getPullPullKeyword_13_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionPolicyRule());
	        }
       		setWithLastConsumed($current, "pull", true, "pull");
	    }

)
)?	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getConnectionPolicyAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRulePeerGroup
entryRulePeerGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPeerGroupRule()); }
	 iv_rulePeerGroup=rulePeerGroup 
	 { $current=$iv_rulePeerGroup.current; } 
	 EOF 
;

// Rule PeerGroup
rulePeerGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='PeerGroup' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPeerGroupAccess().getPeerGroupKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeerGroupAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeerGroupRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPeerGroupAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='coordinator' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPeerGroupAccess().getCoordinatorKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPeerGroupRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPeerGroupAccess().getCoordinatorTaskContextCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='members' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPeerGroupAccess().getMembersKeyword_5_0());
    }
	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPeerGroupAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPeerGroupRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPeerGroupAccess().getMembersTaskContextCrossReference_5_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPeerGroupAccess().getCommaKeyword_5_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPeerGroupRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPeerGroupAccess().getMembersTaskContextCrossReference_5_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPeerGroupAccess().getRightParenthesisKeyword_5_4());
    }
)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPeerGroupAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleActivity
entryRuleActivity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActivityRule()); }
	 iv_ruleActivity=ruleActivity 
	 { $current=$iv_ruleActivity.current; } 
	 EOF 
;

// Rule Activity
ruleActivity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getActivityAccess().getActivityAction_0(),
            $current);
    }
)	otherlv_1='Activity' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActivityAccess().getActivityKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='scheduler' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActivityAccess().getSchedulerKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityAccess().getSchedulerSchedulerEnumRuleCall_4_1_0()); 
	    }
		lv_scheduler_5_0=ruleScheduler		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityRule());
	        }
       		set(
       			$current, 
       			"scheduler",
        		lv_scheduler_5_0, 
        		"Scheduler");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='cpuAffinity' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getActivityAccess().getCpuAffinityKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityAccess().getCpuAffinityEStringParserRuleCall_5_1_0()); 
	    }
		lv_cpuAffinity_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityRule());
	        }
       		set(
       			$current, 
       			"cpuAffinity",
        		lv_cpuAffinity_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='period' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getActivityAccess().getPeriodKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityAccess().getPeriodEFloatParserRuleCall_6_1_0()); 
	    }
		lv_period_9_0=ruleEFloat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityRule());
	        }
       		set(
       			$current, 
       			"period",
        		lv_period_9_0, 
        		"EFloat");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='priority' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getActivityAccess().getPriorityKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityAccess().getPriorityEIntParserRuleCall_7_1_0()); 
	    }
		lv_priority_11_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityRule());
	        }
       		set(
       			$current, 
       			"priority",
        		lv_priority_11_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12='taskContext' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getActivityAccess().getTaskContextKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getActivityRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getActivityAccess().getTaskContextTaskContextCrossReference_8_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='slave' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getActivityAccess().getSlaveKeyword_9_0());
    }
	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityAccess().getSlaveSlaveParserRuleCall_9_2_0()); 
	    }
		lv_slave_16_0=ruleSlave		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityRule());
	        }
       		add(
       			$current, 
       			"slave",
        		lv_slave_16_0, 
        		"Slave");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getActivityAccess().getCommaKeyword_9_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityAccess().getSlaveSlaveParserRuleCall_9_3_1_0()); 
	    }
		lv_slave_18_0=ruleSlave		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityRule());
	        }
       		add(
       			$current, 
       			"slave",
        		lv_slave_18_0, 
        		"Slave");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_9_4());
    }
)?	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleInputPort
entryRuleInputPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputPortRule()); }
	 iv_ruleInputPort=ruleInputPort 
	 { $current=$iv_ruleInputPort.current; } 
	 EOF 
;

// Rule InputPort
ruleInputPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInputPortAccess().getInputPortAction_0(),
            $current);
    }
)	otherlv_1='InputPort' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInputPortAccess().getInputPortKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputPortAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputPortRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInputPortAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='dataType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInputPortAccess().getDataTypeKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputPortRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInputPortAccess().getDataTypeDataTypeCrossReference_4_1_0()); 
	    }
		ruleQualifiedNameWithDot		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInputPortAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleEventPort
entryRuleEventPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventPortRule()); }
	 iv_ruleEventPort=ruleEventPort 
	 { $current=$iv_ruleEventPort.current; } 
	 EOF 
;

// Rule EventPort
ruleEventPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEventPortAccess().getEventPortAction_0(),
            $current);
    }
)	otherlv_1='EventPort' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEventPortAccess().getEventPortKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventPortAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventPortRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEventPortAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='dataType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEventPortAccess().getDataTypeKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventPortRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventPortAccess().getDataTypeDataTypeCrossReference_4_1_0()); 
	    }
		ruleQualifiedNameWithDot		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEventPortAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleOutputPort
entryRuleOutputPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputPortRule()); }
	 iv_ruleOutputPort=ruleOutputPort 
	 { $current=$iv_ruleOutputPort.current; } 
	 EOF 
;

// Rule OutputPort
ruleOutputPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOutputPortAccess().getOutputPortAction_0(),
            $current);
    }
)	otherlv_1='OutputPort' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOutputPortAccess().getOutputPortKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPortAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPortRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOutputPortAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='dataType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOutputPortAccess().getDataTypeKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPortRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOutputPortAccess().getDataTypeDataTypeCrossReference_4_1_0()); 
	    }
		ruleQualifiedNameWithDot		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOutputPortAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPropertyAccess().getPropertyAction_0(),
            $current);
    }
)	otherlv_1='Property' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyAccess().getPropertyKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPropertyAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_description_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='value' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPropertyAccess().getValueKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getValueEStringParserRuleCall_5_1_0()); 
	    }
		lv_value_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='type' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPropertyAccess().getTypeKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getTypeDataTypeCrossReference_6_1_0()); 
	    }
		ruleQualifiedNameWithDot		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPropertyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	 iv_ruleOperation=ruleOperation 
	 { $current=$iv_ruleOperation.current; } 
	 EOF 
;

// Rule Operation
ruleOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOperationAccess().getOperationAction_0(),
            $current);
    }
)	otherlv_1='Operation' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperationAccess().getOperationKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='executionType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperationAccess().getExecutionTypeKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getExecutionTypeExecutionTypeEnumRuleCall_4_1_0()); 
	    }
		lv_executionType_5_0=ruleExecutionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"executionType",
        		lv_executionType_5_0, 
        		"ExecutionType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='returnType' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOperationAccess().getReturnTypeKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getReturnTypeDataTypeCrossReference_5_1_0()); 
	    }
		ruleQualifiedNameWithDot		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='arguments' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOperationAccess().getArgumentsKeyword_6_0());
    }
	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOperationAccess().getLeftParenthesisKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getArgumentsOperationArgumentParserRuleCall_6_2_0()); 
	    }
		lv_arguments_10_0=ruleOperationArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_10_0, 
        		"OperationArgument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getOperationAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getArgumentsOperationArgumentParserRuleCall_6_3_1_0()); 
	    }
		lv_arguments_12_0=ruleOperationArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_12_0, 
        		"OperationArgument");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getOperationAccess().getRightParenthesisKeyword_6_4());
    }
)?(	otherlv_14='documentation' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getOperationAccess().getDocumentationKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getDocumentationEStringParserRuleCall_7_1_0()); 
	    }
		lv_documentation_15_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"documentation",
        		lv_documentation_15_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleOperationArgument
entryRuleOperationArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationArgumentRule()); }
	 iv_ruleOperationArgument=ruleOperationArgument 
	 { $current=$iv_ruleOperationArgument.current; } 
	 EOF 
;

// Rule OperationArgument
ruleOperationArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOperationArgumentAccess().getOperationArgumentAction_0(),
            $current);
    }
)	otherlv_1='OperationArgument' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperationArgumentAccess().getOperationArgumentKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationArgumentAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationArgumentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperationArgumentAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperationArgumentAccess().getTypeKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationArgumentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOperationArgumentAccess().getTypeDataTypeCrossReference_4_1_0()); 
	    }
		ruleQualifiedNameWithDot		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOperationArgumentAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSlave
entryRuleSlave returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSlaveRule()); }
	 iv_ruleSlave=ruleSlave 
	 { $current=$iv_ruleSlave.current; } 
	 EOF 
;

// Rule Slave
ruleSlave returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSlaveAccess().getSlaveAction_0(),
            $current);
    }
)	otherlv_1='Slave' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSlaveAccess().getSlaveKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSlaveAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSlaveRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSlaveAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='taskContext' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSlaveAccess().getTaskContextKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSlaveRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSlaveAccess().getTaskContextTaskContextCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSlaveAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEFloatRule()); } 
	 iv_ruleEFloat=ruleEFloat 
	 { $current=$iv_ruleEFloat.current.getText(); }  
	 EOF 
;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); 
    }
)?(    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); 
    }
)?
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); 
    }
((
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); 
    }

    |
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); 
    }
)(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); 
    }
)?    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    newLeafNode(this_INT_7, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); 
    }
)?)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEShort
entryRuleEShort returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEShortRule()); } 
	 iv_ruleEShort=ruleEShort 
	 { $current=$iv_ruleEShort.current.getText(); }  
	 EOF 
;

// Rule EShort
ruleEShort returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEShortAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEShortAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleQualifiedNameWithDot
entryRuleQualifiedNameWithDot returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithDotRule()); } 
	 iv_ruleQualifiedNameWithDot=ruleQualifiedNameWithDot 
	 { $current=$iv_ruleQualifiedNameWithDot.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithDot
ruleQualifiedNameWithDot returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithDotAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithDotAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameWithDotAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule ExecutionType
ruleExecutionType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='ClientThread' 
	{
        $current = grammarAccess.getExecutionTypeAccess().getClientThreadEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getExecutionTypeAccess().getClientThreadEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='OwnThread' 
	{
        $current = grammarAccess.getExecutionTypeAccess().getOwnThreadEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getExecutionTypeAccess().getOwnThreadEnumLiteralDeclaration_1()); 
    }
));



// Rule Scheduler
ruleScheduler returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='ORO_SCHED_OTHER' 
	{
        $current = grammarAccess.getSchedulerAccess().getORO_SCHED_OTHEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSchedulerAccess().getORO_SCHED_OTHEREnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='ORO_SCHED_RT' 
	{
        $current = grammarAccess.getSchedulerAccess().getORO_SCHED_RTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSchedulerAccess().getORO_SCHED_RTEnumLiteralDeclaration_1()); 
    }
));



// Rule ConnectionPolicyLockPolicy
ruleConnectionPolicyLockPolicy returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='UNSYNC' 
	{
        $current = grammarAccess.getConnectionPolicyLockPolicyAccess().getUNSYNCEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getConnectionPolicyLockPolicyAccess().getUNSYNCEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='LOCKED' 
	{
        $current = grammarAccess.getConnectionPolicyLockPolicyAccess().getLOCKEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getConnectionPolicyLockPolicyAccess().getLOCKEDEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='LOCK_FREE' 
	{
        $current = grammarAccess.getConnectionPolicyLockPolicyAccess().getLOCK_FREEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getConnectionPolicyLockPolicyAccess().getLOCK_FREEEnumLiteralDeclaration_2()); 
    }
));



// Rule ConnectionPolicyType
ruleConnectionPolicyType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='DATA' 
	{
        $current = grammarAccess.getConnectionPolicyTypeAccess().getDATAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getConnectionPolicyTypeAccess().getDATAEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='BUFFER' 
	{
        $current = grammarAccess.getConnectionPolicyTypeAccess().getBUFFEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getConnectionPolicyTypeAccess().getBUFFEREnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='CIRCULAR_BUFFER' 
	{
        $current = grammarAccess.getConnectionPolicyTypeAccess().getCIRCULAR_BUFFEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getConnectionPolicyTypeAccess().getCIRCULAR_BUFFEREnumLiteralDeclaration_2()); 
    }
));



// Rule ConnectionPolicyTransport
ruleConnectionPolicyTransport returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='default' 
	{
        $current = grammarAccess.getConnectionPolicyTransportAccess().getDefaultEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getConnectionPolicyTransportAccess().getDefaultEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='CORBA' 
	{
        $current = grammarAccess.getConnectionPolicyTransportAccess().getCORBAEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getConnectionPolicyTransportAccess().getCORBAEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='MQUEUE' 
	{
        $current = grammarAccess.getConnectionPolicyTransportAccess().getMQUEUEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getConnectionPolicyTransportAccess().getMQUEUEEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='ROS' 
	{
        $current = grammarAccess.getConnectionPolicyTransportAccess().getROSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getConnectionPolicyTransportAccess().getROSEnumLiteralDeclaration_3()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


