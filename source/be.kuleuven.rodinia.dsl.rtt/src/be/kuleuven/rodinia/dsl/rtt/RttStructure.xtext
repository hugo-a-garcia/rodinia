// automatically generated by Xtext
grammar be.kuleuven.rodinia.dsl.rtt.RttStructure with org.eclipse.xtext.common.Terminals

import "be.kueleuven.rodinia.model.rtt" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.kuleuven.be/rodinia/dsl/datatypes/Datatypes" as datatypes

Package returns OrocosPackage:
	{OrocosPackage}
	'OrocosPackage'
	name=EString
	'{'
		('taskContexts' '{' taskContexts+=TaskContext ( "," taskContexts+=TaskContext)* '}' )?
		('connectionPolicies' '{' connectionPolicies+=ConnectionPolicy ( "," connectionPolicies+=ConnectionPolicy)* '}' )?
		('peerGroups' '{' peerGroups+=PeerGroup ( "," peerGroups+=PeerGroup)* '}' )?
	'}';

TaskContext returns TaskContext:
	'TaskContext'
	name=EString
	'{'
		'namespace' namespace=QualifiedNameWithDot
		'type' type=QualifiedNameWithDot
		'activity' activity=Activity
		('inputPorts' '{' inputPorts+=InputPort ( "," inputPorts+=InputPort)* '}' )?
		('eventPorts' '{' eventPorts+=EventPort ( "," eventPorts+=EventPort)* '}' )?
		('outputPorts' '{' outputPorts+=OutputPort ( "," outputPorts+=OutputPort)* '}' )?
		('properties' '{' properties+=Property ( "," properties+=Property)* '}' )?
		('operations' '{' operations+=Operation ( "," operations+=Operation)* '}' )?
	'}';
	
PeerGroup returns PeerGroup:
	'PeerGroup'
	name=EString
	'{'
		'coordinator' coordinator=[TaskContext|EString]
		('members' '(' members+=[TaskContext|EString] ( "," members+=[TaskContext|EString])* ')' )?
	'}';

ConnectionPolicy returns ConnectionPolicy:
	'ConnectionPolicy'
	name=EString
	'{'
		'inputPort' inputPort=[InputPort|EString]
		'outputPort' outputPort=[OutputPort|EString]
		(init?='init')?
		(pull?='pull')?
		('bufferSize' bufferSize=EShort)?
		('dataSize' dataSize=EShort)?
		('lockPolicy' lockPolicy=ConnectionPolicyLockPolicy)?
		('transport' transport=ConnectionPolicyTransport)?
		('type' type=ConnectionPolicyType)?
		
	'}';

enum ConnectionPolicyLockPolicy returns ConnectionPolicyLockPolicy:
	UNSYNC | LOCKED | LOCK_FREE;

enum ConnectionPolicyType returns ConnectionPolicyType:
	DATA | BUFFER | CIRCULAR_BUFFER;
	
enum ConnectionPolicyTransport returns ConnectionPolicyTransport:
	default | CORBA | MQUEUE | ROS
;

InputPort returns InputPort:
	'InputPort'
	name=EString
	'{'
		('dataType' dataType=[datatypes::DataType|QualifiedNameWithDot])?
		//('inputConnectionPolicy' inputConnectionPolicy=[ConnectionPolicy|EString])?
	'}';
	
EventPort returns EventPort:
	{EventPort}
	'EventPort'
	name=EString
	'{'
		('dataType' dataType=[datatypes::DataType|EString])?
		//('inputConnectionPolicy' inputConnectionPolicy=[ConnectionPolicy|EString])?
	'}';

OutputPort returns OutputPort:
	'OutputPort'
	name=EString
	'{'
		('dataType' dataType=[datatypes::DataType|QualifiedNameWithDot])?
		//('outputConnectionPolicy' outputConnectionPolicy=[ConnectionPolicy|EString])?
	'}';
	
Property returns Property:
	{Property}
	'Property'
	name=EString
	'{'
		('description' description=EString)?
		('value' value=EString)?
		('type' type=[datatypes::DataType|QualifiedNameWithDot])?
	'}';

Operation returns Operation:
	{Operation}
	'Operation'
	name=EString
	'{'
		('documentation' documentation=EString)?
		('returnType' returnType=[datatypes::DataType|QualifiedNameWithDot])?
	'}';

EShort returns ecore::EShort:
	'-'? INT;
	
IActivity returns IActivity:
	Activity | Slave;
	
Activity returns Activity:
	'Activity'
	name=EString
	'{'
		'scheduler' scheduler=Scheduler
		'cpuAffinity' cpuAffinity=EString
		'period' period=EFloat
		'priority' priority=EInt
		('taskContext' taskContext=[TaskContext|EString])?
		('slave' '{' slave+=Slave ( "," slave+=Slave)* '}' )?
	'}';

Slave returns Slave:
	{Slave}
	'Slave'
	name=EString
	'{'
		('taskContext' taskContext=[TaskContext|EString])?
	'}';

enum Scheduler returns Scheduler:
	ORO_SCHED_OTHER | ORO_SCHED_RT
;

EString returns ecore::EString:
	STRING | ID;
	
EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EInt returns ecore::EInt:
	'-'? INT;
	
QualifiedName:
  ID ('::' ID)*
;

QualifiedNameWithDot:
  QualifiedName ('.' ID)*
;