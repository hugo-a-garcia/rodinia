require "rttlib"

-- deploy_app.lua
tc = rtt.getTC()
depl = tc
 
--get import and loadComponent
import = depl:getOperation("import")
loadComponent = depl:getOperation("loadComponent")
setActivity = depl:getOperation("setActivity")
addPeer = depl:getOperation("addPeer")
connect = depl:getOperation("connect")

--import the packages (you don't need to do "depl:import" at this point)
import("[%=package.name%]")

-- create components
[%for(taskContext in package.taskContexts) {%]
loadComponent("[%=taskContext.name%]", "[%=taskContext.namespace%]::[%=taskContext.type%]")
[*setActivity("[%=taskContext.name%]", [%=taskContext.activity.period%], [%=taskContext.activity.priority%], rtt.globals.[%=taskContext.activity.scheduler%])
*] 
 [%}%]
 
 [% if (package.peerGroups.isDefined()) {
 		for (peerGroup in package.peerGroups) {
 			for(peer in peerGroup.members) {%]
 -- Add [%=peerGroup.name%] peerGroup memebers:
 addPeer("[%=peerGroup.coordinator.name%]", "[%=peer.name%]")
 			[%}%]
 		[%}%]
  [%}%]
  
[%for(connection in package.connectionPolicies) {%]
cp = rtt.Variable('ConnPolicy')
cp.name_id = "[%=connection.name%]"
cp.type = [%=connection.type.value%] -- [%=connection.type%]
cp.transport = [%=connection.transport.value%] -- [%=connection.transport%]
cp.lock_policy = [%=connection.lockPolicy.value%] -- [%=connection.lockPolicy%]
[%if (connection.type.value <> 0) {%]
cp.size = [%=connection.bufferSize%]
cp.data_size = [%=connection.dataSize%]
cp.init = [%=connection.init%]
cp.pull = [%=connection.pull%]
[%}%][%}%]
[*
connect("[%=connection.outputPort.eContainer.name%].[%=connection.outputPort.name%]", "[%=connection.inputPort.eContainer.name%].[%=connection.inputPort.name%]", cp)

*]